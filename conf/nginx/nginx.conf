user nobody nogroup;
daemon off;
error_log /dev/stderr warn;

worker_processes auto;
pcre_jit on;

include /etc/nginx/modules/*.conf;

events {
    worker_connections 4096;
    multi_accept off;
    accept_mutex off;
}

http {
    aio threads;

    # Fix broken uploads
    client_body_buffer_size 16k;
    client_body_in_file_only off;
    client_body_in_single_buffer off;

    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Don't tell nginx version to clients.
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable.
    client_max_body_size 1024m;

    # Timeout for keep-alive connections. Server will close connections after
    # this time.
    keepalive_timeout 120;
    keepalive_requests 20000;


    # Large cookies/header
    client_header_buffer_size 8k;
    large_client_header_buffers 8 128k;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write().
    sendfile off;

    # Don't buffer data-sends (disable Nagle algorithm).
    # Good for sending frequent small bursts of data in real time.
    tcp_nodelay on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames.
    tcp_nopush on;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Enable checking the existence of precompressed files.
    gzip_static off;

    log_format kubernetes $time_local ' Nginx:  From: ' $http_x_forwarded_for ' Request: ' $request_method ' ' $http_x_forwarded_proto '://' $host $request_uri ' Response: HTTP Code: ' $status ' Bytes Sent: ' $bytes_sent ' Time: ' $request_time;

    # Sets the path, format, and configuration for a buffered log write.
    access_log /dev/stdout kubernetes;

    ###
    ### Server configuration 
    ###
    server {
        listen 80 default_server;

        root /src/public;

        add_header pod $hostname;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm;

        server_name _;

        ### Begin pentest box ticking ###
        add_header Referrer-Policy "no-referrer-when-downgrade";
        add_header X-XSS-Protection 1;
        add_header X-Frame-Options sameorigin;
        add_header X-Content-Type-Options nosniff;

        # Block version and readme info
        location ^~ (/version.php|/README.txt|/composer.json|/package.json|/npm-shrinkwrap.json) {
            return 404;
        }

        # Block all dot files/folders apart from
        #   .well-known, since that's an RFC
        location ~ /\.(?!well-known\/).* {
            return 404;
        }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Not on Seacole sites but we may use GCP in the future so leaving it here.
        #
        # Pass external SCORM manifests to Amazon S3
        #location /local/external_manifests/ {
        #    proxy_pass http://anderson-manifest.s3-website-eu-west-1.amazonaws.com/local/external_manifests/;
        #}

        ###customlocation

        location ~ \.php$ {
            try_files $uri =404;
            include fastcgi_params;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/run/php-fpm.sock;
            fastcgi_param SERVER_NAME $http_host;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
            fastcgi_read_timeout 600s;
            fastcgi_request_buffering off;
            fastcgi_param PHP_VALUE "atatus.enabled=on;";
        }

        # Healthz endpoint, courtesy of PHP-FPM ping pong
        location ~ ^/(healthz)$ {
            include fastcgi_params;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass unix:/var/run/php-fpm.sock;
            access_log off;
            fastcgi_param PHP_VALUE "atatus.enabled=off;";
        }
    }
}
